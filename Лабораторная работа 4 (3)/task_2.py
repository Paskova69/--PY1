def get_count_char(str_):
    str_ = str_.lower()  # привожу к нижнему регистру
    dict_ = {}  # создание словаря, в который будет вестись запись
    for char in str_: # перебор символов в строке
        if char.isalpha(): # проверка того, что символ является буквой
            dict_.setdefault(char, str_.count(char))  # задаю значение, соответствующее ключу
    return dict_  # возвращение созданного словаря

def get_procent_count_char(dict_):
    procent_dict = {}  # создание нового словаря, в который будет вестись запись
    for char, value in dict_.items():  # перебор ключей и значений в парах ключ - значения из словаря dict_
        procent_dict.setdefault(char, round(value / sum(dict_.values()) * 100, 2))  # задаю соотвествующее ключу значение, выраженное в процентах, округленное до сотых
    return procent_dict  # возвращеине созданного словаря

main_str = """
    Данное предложение будет разбиваться на отдельные слова. 
    В качестве разделителя для встроенного метода split будет выбран символ пробела. На выходе мы получим список отдельных слов. 
    Далее нужно отсортировать слова в алфавитном порядке, а после сортировки склеить их с помощью метода строк join. Приступим!!!!
"""

main_str_1 = get_count_char(main_str)

print(main_str_1)

print(get_procent_count_char(main_str_1))
